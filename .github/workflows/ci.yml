name: CI

on:
  push:
  pull_request:

jobs:
  build-test:
    name: build-test (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install project (editable) + dev extras
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[dev]"

      - name: Lint (ruff)
        run: ruff check . --output-format=github

      - name: Format check (black)
        run: black --check .

      - name: Type-check (mypy)
        run: mypy .

      - name: Run tests with coverage
        run: |
          pytest -q --cov=rcwa_app --cov-report=xml --cov-report=term-missing

      # --- Artifacts (unique names per job to avoid 409 conflicts) ---
      - name: Upload raw coverage data (.coverage*)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-py${{ matrix.python-version }}
          path: |
            .coverage*
          if-no-files-found: ignore

      - name: Upload coverage.xml (per job; optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-py${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: ignore

  coverage-merge:
    name: Merge & publish coverage
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Download raw coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-py*
          path: coverages
          merge-multiple: true

      - name: Combine to single .coverage and create XML
        run: |
          python -m pip install --upgrade coverage
          # Combine all `.coverage*` files into one database:
          coverage combine coverages
          coverage xml -o coverage.xml
          coverage report -m

      - name: Upload combined coverage.xml (single artifact)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: Upload to Codecov (single upload)
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          name: combined
          fail_ci_if_error: true
