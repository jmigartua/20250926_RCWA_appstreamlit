name: CI

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    # Expose the Codecov token (if present) as an env var so we can safely
    # check it in `if:` without referencing the `secrets` context there.
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Upgrade pip tooling
        run: |
          python -m pip install --upgrade pip wheel setuptools

      - name: Install project (editable) + dev extras
        run: |
          pip install -e .[dev]

      - name: Lint (ruff)
        run: |
          ruff check .

      - name: Format check (black)
        run: |
          black --check .

      - name: Type-check (mypy)
        run: |
          mypy .

      - name: Run tests with coverage
        run: |
          pytest -q --cov=rcwa_app --cov-report=xml:coverage.xml

      # Use a per-matrix artifact name to avoid 409 conflicts between jobs.
      - name: Upload coverage.xml as artifact (optional)
        if: always()  # still upload even if tests failed, for debugging
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: ignore

      # Only attempt Codecov upload when the token is present.
      - name: Upload to Codecov (token)
        if: ${{ env.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ env.CODECOV_TOKEN }}
          files: coverage.xml
          verbose: true
